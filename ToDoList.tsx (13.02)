import React, {ChangeEvent, FC, RefObject, useRef, KeyboardEvent, useState} from 'react';
import TasksList from "./TasksList";
import {FilterValuesType} from "./App";

type TodoListPropsType = {
    title: string
    tasks: TaskType[]
    changeFilterValue: (filter: FilterValuesType) => void
    removeTask: (taskId: string) => void
    addTask: (title: string) => void
}
export type TaskType = {
    id: string
    title: string
    isDone: boolean
}

const TodoList: FC<TodoListPropsType> = (props) => {
    const [title, setTitle] = useState<string>("")
    //const addTaskInput: RefObject<HTMLInputElement> = useRef (null)
    //console.log(addTaskInput)
    //const addTask = () => {
    //    if(addTaskInput.current) {
    //        props.addTask(addTaskInput.current.value)
    //        addTaskInput.current.value = ""
    //   }
   // }
    const changeLocalTitle = (e: ChangeEvent<HTMLInputElement>)=>setTitle(e.currentTarget.value)
    const addTask = () => {
        const trimedTitle = title.trim()
        if(trimedTitle) {
            props.addTask(trimedTitle)
        }
        setTitle("")
    }
    const onKeyDownAddTask = (e: KeyboardEvent<HTMLInputElement>)=> e.key === "Enter" && addTask()

    const setAllFilterValue = () => props.changeFilterValue("all")
    const setActiveFilterValue = () => props.changeFilterValue("active")
    const setCompletedFilterValue = () => props.changeFilterValue("completed")
    return (
        <div className={"todolist"}>
            <h3>{props.title}</h3>
            <div>
                {/*<input ref={addTaskInput}/>*/}
                {/*<button onClick={addTask}>+</button>*/}
                <input
                    value={title}
                    onChange={changeLocalTitle}
                    onKeyDown={onKeyDownAddTask}
                />
                <button disabled ={title.trim().length === 0} onClick={addTask}>+</button>
                {title.length > 15 && <div style={{color: "hotpink"}}> Task title is so long</div>}
            </div>
            <TasksList tasks={props.tasks} removeTask={props.removeTask}/>
            <div>
                <button
                    onClick={setAllFilterValue}
                >All</button>
                <button
                    onClick={setActiveFilterValue}
                >Active</button>
                <button
                    onClick={setCompletedFilterValue}
                >Completed</button>
            </div>
        </div>
    );
};

export default TodoList;
